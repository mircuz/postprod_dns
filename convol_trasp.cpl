!// Function to copy data from the structure to C--------------------------------------------------------
SUBROUTINE move_data
	INTEGER counter = 0
	LOOP FOR i=ilo TO ihi
		LOOP FOR k=klo TO khi
			LOOP FOR j=-1 TO ny+1
				U_t[counter]= V(i,k,j).u.REAL;		V_t[counter]= V(i,k,j).v.REAL;		W_t[counter]= V(i,k,j).w.REAL;		INC counter;
				U_t[counter]= V(i,k,j).u.IMAG;		V_t[counter]= V(i,k,j).v.IMAG;		W_t[counter]= V(i,k,j).w.IMAG;		INC counter;
			REPEAT
		REPEAT
	REPEAT 
!(IF rank=0 THEN 
	LOOP FOR i=0 TO localdim_x
			IF i MOD (19*2) = 0 THEN WRITE; WRITE
			WRITE U_t[i]" " ./.
	REPEAT 
END IF !)
END move_data 

SUBROUTINE convol_trasp(INTEGER nx_read,ny_read,nz_read)
<*
	/****************************************************************************
	 * 													      					*
	 * 				2D FFT with Pencil Decomposition in MPI Space				*
	 * 													      					*
	 ****************************************************************************
											     	   Author: Dr. Mirco Meazzo */
  //----------------------------------------------- Bridge Variables -------------------------------------------
  int rank = rank_; int nzd, nxd;
  int nx= nx_read_+1;	int nz= 2*nz_read_+1;	int ny=ny_read_+3;	 nxd = nxd_, nzd = nzd_;
  void *remap_to_zpencil, *remap_to_xpencil;
  int nqty, permute, memoryflag, sendsize, recvsize;
  /************************************************ backward FFTs *********************************************/
  // ------------------------------------------- Setup z-Transpose --------------------------------------------
  nqty = 2;			// Use couples of real numbers per grid point
  memoryflag = 1;		// Self-allocate the buffers
  remap3d_create( MPI_COMM_WORLD , &remap_to_xpencil);
  permute = 1;  		// From z-contiguous to x-contiguous arrays
  remap3d_setup( remap_to_xpencil,
      		  	  z_klo_,  z_khi_, z_ilo_,  z_ihi_, z_jlo_, z_jhi_,
				  x_klo_,  x_khi_, x_ilo_,  x_ihi_, x_jlo_, x_jhi_, 
      			  nqty, permute, memoryflag, &sendsize, &recvsize);
  MPI_Barrier(MPI_COMM_WORLD);
  // -----------------------------------------------------------------------------------------------------------	
  // Apply AA in z-direction locally
  //if (rank == 0) printf("Applying local z-antialiasing...\n");
  z_aliasing( (z_ihi_-z_ilo_+1), (z_jhi_-z_jlo_+1), nz, nzd, u_convol_, U_t_); 	
  z_aliasing( (z_ihi_-z_ilo_+1), (z_jhi_-z_jlo_+1), nz, nzd, v_convol_, V_t_);	
  z_aliasing( (z_ihi_-z_ilo_+1), (z_jhi_-z_jlo_+1), nz, nzd, w_convol_, W_t_);	
  MPI_Barrier(MPI_COMM_WORLD);
  // Backward FFT
  //print_z_pencil( nzd, z_ilo_, z_ihi_, z_jlo_, v_convol_, rank, localdim_z_, 0); 
  //if (rank == 0) printf("\tAA applied\n\nStarting Backward transformations...\n");
  double timer_b1 = 0.0;
  timer_b1 -= MPI_Wtime();	*>
	FFT_z( u_convol, localdim_z, 1)
	FFT_z( v_convol, localdim_z, 1)
	FFT_z( w_convol, localdim_z, 1) 
<*MPI_Barrier(MPI_COMM_WORLD);
  timer_b1 += MPI_Wtime();
//print_z_pencil( nzd, z_ilo_, z_ihi_, z_jlo_, v_convol_, rank, localdim_z_, 0); 

  // Transpose in x-pencil
  MPI_Barrier(MPI_COMM_WORLD);
    remap3d_remap(remap_to_xpencil,u_convol_,u_convol_,sendbuf_,recvbuf_);
    remap3d_remap(remap_to_xpencil,v_convol_,v_convol_,sendbuf_,recvbuf_);
    remap3d_remap(remap_to_xpencil,w_convol_,w_convol_,sendbuf_,recvbuf_);
  MPI_Barrier(MPI_COMM_WORLD); 

  // Apply AA in x-direction locally
  //if (rank == 0) printf("\tApplying local x-antialiasing\n");
  x_aliasing( nx, (x_jhi_-x_jlo_+1), (x_khi_-x_klo_+1), nxd, u_convol_, u_convol_);
  x_aliasing( nx, (x_jhi_-x_jlo_+1), (x_khi_-x_klo_+1), nxd, v_convol_, v_convol_);
  x_aliasing( nx, (x_jhi_-x_jlo_+1), (x_khi_-x_klo_+1), nxd, w_convol_, w_convol_);
  MPI_Barrier(MPI_COMM_WORLD);
  // Backward RFT *>
	FFT_x( u_convol, localdim_x, 1)
	FFT_x( v_convol, localdim_x, 1)
	FFT_x( w_convol, localdim_x, 1) 
<*MPI_Barrier(MPI_COMM_WORLD);
  x_dealiasing( localdim_x_/(2*nxd), nx, nxd, u_convol_);
  x_dealiasing( localdim_x_/(2*nxd), nx, nxd, v_convol_);
  x_dealiasing( localdim_x_/(2*nxd), nx, nxd, w_convol_);

  MPI_Barrier(MPI_COMM_WORLD);
  //print_x_pencil(nx, x_jlo_, x_jhi_, x_klo_, v_convol_, rank, localdim_z_, 0);
  remap3d_destroy(remap_to_xpencil);
  /*********************************************************************************************/
  // -------------------------------------------- Setup x-Transpose -----------------------------------------
  remap3d_create( MPI_COMM_WORLD , &remap_to_zpencil);
  permute = 2; 		// From x-contiguous to z-contiguous arrays
  remap3d_setup( remap_to_zpencil,
		  	  	  x_ilo_,  x_ihi_, x_jlo_,  x_jhi_,  x_klo_, x_khi_,
				  z_ilo_,  z_ihi_, z_jlo_,  z_jhi_,  z_klo_, z_khi_,
				  nqty, permute, memoryflag, &sendsize, &recvsize);
  MPI_Barrier(MPI_COMM_WORLD);

  // -----------------------------------------------------------------------------------------------------------
  // Transpose to x-pencil
  	remap3d_remap(remap_to_zpencil,u_convol_,u_convol_,sendbuf_,recvbuf_);   
	remap3d_remap(remap_to_zpencil,v_convol_,v_convol_,sendbuf_,recvbuf_); 
	remap3d_remap(remap_to_zpencil,w_convol_,w_convol_,sendbuf_,recvbuf_); 
  MPI_Barrier(MPI_COMM_WORLD);  
  remap3d_destroy(remap_to_zpencil);

  z_dealiasing( (z_ihi_-z_ilo_+1), (z_jhi_-z_jlo_+1), nz, nzd, u_convol_);
  z_dealiasing( (z_ihi_-z_ilo_+1), (z_jhi_-z_jlo_+1), nz, nzd, v_convol_);
  z_dealiasing( (z_ihi_-z_ilo_+1), (z_jhi_-z_jlo_+1), nz, nzd, w_convol_);
  MPI_Barrier(MPI_COMM_WORLD);  
  //print_z_pencil( nz, z_ilo_, z_ihi_, z_jlo_, v_convol_, rank, localdim_z_*nz/nzd, 1);

  /********************************************* Cut high x-modes ************************************************/
  // From z to x pencil
  nqty = 2;			// Use couples of real numbers per grid point
  memoryflag = 1;		// Self-allocate the buffers
  remap3d_create( MPI_COMM_WORLD , &remap_to_xpencil);
  permute = 1;  		// From z-contiguous to x-contiguous arrays
  remap3d_setup( remap_to_xpencil,
      		  	  fz_klo_,  fz_khi_, fz_ilo_,  fz_ihi_, fz_jlo_, fz_jhi_,
				  fx_klo_,  fx_khi_, fx_ilo_,  fx_ihi_, fx_jlo_, fx_jhi_, 
      			  nqty, permute, memoryflag, &sendsize, &recvsize);
  MPI_Barrier(MPI_COMM_WORLD);
    remap3d_remap(remap_to_xpencil,u_convol_,u_convol_,sendbuf_,recvbuf_);
    remap3d_remap(remap_to_xpencil,v_convol_,v_convol_,sendbuf_,recvbuf_);
    remap3d_remap(remap_to_xpencil,w_convol_,w_convol_,sendbuf_,recvbuf_); 
  //print_x_pencil(nx, fx_jlo_, fx_jhi_, fx_klo_, v_convol_, rank, 2*(fx_ihi_-fx_ilo_+1)*(fx_jhi_-fx_jlo_+1)*(fx_khi_-fx_klo_+1), 0);  
 
  // Remove last entries for each x-row
  remove_undesidered_xmodes(u_convol_, 2*nx, 2*nx_+1, fx_jhi_-fx_jlo_+1, fx_khi_-fx_klo_+1);
  remove_undesidered_xmodes(v_convol_, 2*nx, 2*nx_+1, fx_jhi_-fx_jlo_+1, fx_khi_-fx_klo_+1);
  remove_undesidered_xmodes(w_convol_, 2*nx, 2*nx_+1, fx_jhi_-fx_jlo_+1, fx_khi_-fx_klo_+1);
  //print_sx_pencil(2*nx_+1, fx_jlo_, fx_jhi_, fx_klo_, v_convol_, rank, (2*nx_+1)*(fx_jhi_-fx_jlo_+1)*(fx_khi_-fx_klo_+1), 0);
  remap3d_destroy(remap_to_xpencil);
  MPI_Barrier(MPI_COMM_WORLD);	*>
 
END convol_trasp

SUBROUTINE ytoz
	move_data 
<*	int nqty, permute, memoryflag, sendsize, recvsize;
	void *remap_ytoz_pencil;
	nqty=2, memoryflag=1;
	// ------------------------------------------- Setup YZ-Transpose --------------------------------------------
  	remap3d_create( MPI_COMM_WORLD , &remap_ytoz_pencil);
  	permute = 1;  		// From y-contiguous to z-contiguous arrays
  	remap3d_setup( remap_ytoz_pencil,
	  		  	  y_jlo_, y_jhi_, y_klo_, y_khi_, y_ilo_, y_ihi_,
				  fz_jlo_, fz_jhi_, fz_klo_, fz_khi_, fz_ilo_, fz_ihi_,
	  			  nqty, permute, memoryflag, &sendsize, &recvsize);
  // -----------------------------------------------------------------------------------------------------------
	MPI_Barrier(MPI_COMM_WORLD);
	remap3d_remap(remap_ytoz_pencil,U_t_,U_t_,sendbuf_,recvbuf_);
	remap3d_remap(remap_ytoz_pencil,V_t_,V_t_,sendbuf_,recvbuf_);
	remap3d_remap(remap_ytoz_pencil,W_t_,W_t_,sendbuf_,recvbuf_);
  	MPI_Barrier(MPI_COMM_WORLD); 
	remap3d_destroy(remap_ytoz_pencil);	*>
END ytoz

